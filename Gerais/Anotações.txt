window.alert('Olá, Mundo!')

A palavra window (opctional) é um objeto que indica uma referência à janela atual do navegador. A palavra alert() é um método capaz de disparar uma mini-janela de alerta para avisar algo ao usuário. Dentro dos parênteses do método alert(), temos uma string entre aspas (que podem ser ‘aspas simples’, “aspas duplas” ou `crases` para delimitar as palavras que efetivamente aparecerão na janela de alerta. 



window.prompt()

gera uma solicitação para que o usuário digite algo. Essa janela se parece bastante com um alerta, mas tem a
diferença de incluir uma caixa disponível para aceitar a digitação.



window.alert(`Olá, ${nome}! É um prazer te conhecer!`) 
Uma string que está entre crases tem um nome especial: se chama template string. Esse tipo de string é uma das novidades do ECMAScript moderno e quebram um galho gigante!
Dentro de uma template string podemos usar placeholders no seu interior. Um placeholder é representado pelos símbolos ${} e podem ser usados para facilitar a exibição de conteúdos de variáveis ou expressões. 
--------------------------------------------------------------------------------------

Maneiras de converter para number

- Number(n) 	//Forma mais moderna
		//O JavaScript que vai decidar se é int ou float de acordo com o valor que ele recebeu

- Number.parseInt(n) ou parseInt(n) (mesma coisa)
		//Forçar para int

- Number.parseFloat(n) ou parseFloat(n) (mesma coisa)
		//Forçar para float

--------------------------------------------------------------------------------------

Maneiras de converter para string:

- String(n) 	//Forma mais moderna

- (n).toString

--------------------------------------------------------------------------------------

n1.toLocaleString('pt-BR', {style: 'currency', currency: 'EUR'}) //Formata o número no padrão Europeu

n1.toLocaleString('pt-BR', {style: 'currency', currency: 'USD'}) //Formata o número no padrão Americano
 
n1.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'}) //Formata o número no padrão Brasileiro

n1.toFixed(2).replace('.', ',') //Converte o número para duas casas decimais e troca de '.' para ','

n1.toFixed(2) //Converte o número para duas casas decimais

--------------------------------------------------------------------------------------

Convertar para minúsculas ou maiúsculas e contar caracteres da string:

nome.toLowerCase() //Converte a string para minúsculas

nome.toUpperCase() //Converte a string para maiúsculas

nome.lenght //Conta quantos caracteres a string tem
--------------------------------------------------------------------------------------

Maneiras de declarar variaveis e constantes:

let nome
var nome
const nome


Podem começar com letra, $ ou _

Não podem começar com números

É possível usar letras ou números

É possivel usar acentos e símbolos

Não podem conter espaços

Não podem ser palavras reservadas

Maiúculas e minúsculas fazem diferença

Tente escolher nome coerentes para as variáveis

Evite se tornar um 'programador alfabeto'(que coloca nome de variáveis com letras aleatórias) ou um 'programador contador'(que coloca nome de variáveis com números)

--------------------------------------------------------------------------------------

Data types

- number
	Infinity
	NaN

- string

- boolean

- null

- undefined

- object
	Array

- function   

--------------------------------------------------------------------------------------

Exemplos:

var s = 'JavaScript'								

'Eu estou aprendendo s' //Não faz interpolação

'Eu estou aprendendo' + s //Usa concatenação

`Eu estou aprendendo ${s}` //Usa template string

--------------------------------------------------------------------------------------

OPERADORES (não estão todos na lista) 

Ordem de Precedência dos Operadores em JavaScript:

1° - (), **, /, +, ...		---> Operadores aritméticos (Tem ordem de precedencia)
2° - >, <, >=, ...		---> Operadores Relacionais (Não tem ordem de precedencia, quem aparecer 					primeiro vai ser feito primeiro, a leitura é da esquerda para a direita)
3° - !, &&, ||			--> Operadores lógicos (Tem ordem de precedencia)
	


- Aritméticos

	+  (adição)		--->   5 +  2 = 7
	-  (subtração)		--->   5 -  2 = 3
	*  (multiplicação)	--->   5 *  2 = 10
	/  (divisão)		--->   5 /  2 = 2.5
	%  (resto da divisão) 	--->   5 /  2 = 1
	** (potenciação)	--->   5 ** 2 = 25

	
	Ordem de Precedência dos Operadores Aritméticos em JavaScript:

	1° - ()
	2° - **
	3° - *, /, %
	4° - +, -



- Atribuição

	Atribuição Simples

	var a = 5 + 3		---> 8
	var b = a % 5		---> 3
	var c = 5 * b ** 2 	---> 45
	var d = 10 - a / 2 	---> 6
	var e = 6 * 2 / d 	---> 2
	var f = b % e + 4 / e 	---> 3

	
	Auto-autribuições
	
	var n = 3		---> 3
	n = n + 4  (n += 4)	---> 7
	n = n - 5  (n -= 5)	---> 2
	n = n * 4  (n *= 4) 	---> 8
	n = n / 2  (n /= 2) 	---> 4
	n = n ** 2 (n **= 2)	---> 16
	n = n % 5  (n %= 5)	---> 1

	
	Incremento

	var x = 5
	x = x + 1 (x++) 	---> 6
	x = x - 1 (x--)		---> 5



- Relacionais

	>  (maior)		--->   5  >  2 = true
	<  (menor)		--->   7  <  4 = false
	>= (maior ou igual)	--->   8 >=  8 = true
	<= (menor ou igual)	--->   9 <=  7 = false
	== (igual)		--->   5 ==  5 = true
	!= (diferente)		--->   4 !=  4 = false

	
	Exemplos:
	
	preço >= 200.50		---> // O preço é maior ou igual a 200.50?
	idade < 18		---> // A idade é menor do que 18?
	curso == 'JavaScript'	---> // O curso é 'JavaScript'?
	n1 != n2		---> // O n1 é diferente do n2?


	Identidade

	5 == 5		---> true
	5 == '5'	---> true 	// Testa apenas o valor
	5 === '5'	---> false 	// Testa o valor e o tipo
	5 === 5 	---> true
	//Funciona do mesmo jeito para o operador de diferente

	Não tem ordem de precedência


- Lógicos

	!  (Negação)			---> !true  = false
					---> !false = true
	
	&& (Conjunção) // e lógico	---> true  && true  = true
					---> true  && false = false
					---> false && true  = false
					---> false && false = false

	|| (Disjunção) // ou lógico	---> true  || true  = true
					---> true  || false = true		
					---> false || true  = true
					---> false || false = false
					
	
	Ordem de Precedência dos Operadores Lógicos em JavaScript:

	1° - !  (Não)
	2° - && (E)
	3° - || (Ou)


	Exemplos:

	idade >= 15 && idade <= 17	---> // A idade está entre 15 e 17?
	estado == 'RJ' || estado == 'SP'---> // O estado é 'RJ' ou 'SP'?
	salário > 1500 && sexo != 'M'   ---> // O salário é acima de 1500 e não é homem?
 


- Ternário

	? :

Se chama ternário pois tem 3 partes:

teste lógico ? true : false

	
	Exemplo:

	média >= 7.0 ? 'Aprovado' : 'Reprovado'	--> // Se a média for maior ou igual a 7.0 ele vai colocar 							'Aprovado', se não ele vai colocar 'Reprovado'
	

--------------------------------------------------------------------------------------

DOM ---> Document Object Model (Modelo de objetos para documentos)

- Basicamente é um conjunto de objetos dentro do navegador que vai dar acesso ao componentes internos do website


Árvore DOM (Tem a imagem na pasta do JavaScript)

		window
    
      location  document  history
		 
		 html
	      
	      head  body
   
      meta title    h1 p p div
			
		     strong	


	
	Selecionando

		- por Marca(tag)	---> getElementsByTagName()
		- por ID		---> getElementsById()
		- por Nome		---> getElementsByName()
		- por Classe		---> getElementsByClassName()
		- por Seletor		---> querySelector()
					---> querySelectorAll()


Eventos DOM

	- mouseenter	---> mover o cursor do mouse até o elemento (por exemplo: div)
	- mousemove	---> continuar movendo o mouse dentro do elemento (enquanto tiver movendo o mouse vai disparar o evento)
	- mousedown	---> clicar e segurar o botão do mouse
	- mouseup	---> soltar o botão do mouse após clicar e segurar
	- click		---> clicar no elemento
	- mouseout	---> mover o cursor do mouse para fora do elemento

--------------------------------------------------------------------------------------

CONDIÇÕES

if (condição) {
    true
} else {
    false
}



// Tipos de condição

	- Condição simples
		if (condição){
		    true
		}

	- Condição composta
		if (condição) {
		    true
		} else {
  		    false
		}

	- Condição aninhada
		 if (condição) {
		    true
		} else {
  		    	if (condição) {
		    	    true
			} else {
  		    	    false
			}
		}

	- Condição Multipla
		switch () {
		    case valor 1:
			{bloco de comandos}
			break
		    case valor 1:
		   	{bloco de comandos}
			break
 		    case valor 1:
			{bloco de comandos}
			break
  		    default (funciona como o else, caso nenhum case seja executado o default vai ser):
			{bloco de comandos}
			break
		}




COMO PEGAR HORÁRIO ATUAL

var horaAtual = new Date()
var hora = horaAtual.getHours